{"version":3,"sources":["shared/header/header.index.js","pages/page.home/page.home.index.js","utils/GlobalUtils.js","shared/carousel/carousel.index.js","shared/ButtonAddFavorite.js","utils/AppConstants.js","shared/pagination/pagination.index.js","pages/page.housingList/page.housingList.index.js","shared/galleryModal/galleryModal.index.js","shared/widthWindowWidth.js","pages/page.housingSingle/page.housingSingle.index.js","shared/MaterialTheme.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","flexShrink","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","Header","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Menu","to","Typography","variant","noWrap","SearchOutlined","InputBase","placeholder","input","inputProps","PageHome","href","defaultClassnames","conditionalClassnames","key","housing","info_guest","info_bed","info_kitchen","info_wifi","filter","tag","join","user","first_name","last_name","Carousel","props","_afterChange","current","setState","carouselCurrent","SlickProps","afterChange","state","this","images","length","dots","arrows","infinite","slidesToShow","slidesToScroll","ref","carouselRef","lazyLoad","map","image","imageIndex","GlobalUtils","src","alt","Skeleton","style","paddingTop","React","Component","defaultProps","styles","createStyles","top","left","zIndex","grey","withTheme","withStyles","favorite","useState","isFavorite","setFavorite","onClick","Favorite","secondary","main","fontSize","FavoriteBorder","BREAKPOINTS","API_DOMAIN","Pagination","page_current","NavigateBefore","Array","page_count","fill","page","pageIndex","isPrev","isNext","isFirst","isLast","Fragment","NavigateNext","placeholderList","id","PageHousingList","fetchHousingsList","fetch","AppConstants","then","res","json","error","housings","data","list","pagination","getCurrentPagination","URLSearchParams","location","get","handlePagination","history","push","path","pathname","prevProps","nextPage","window","scrollTo","nextPagination","n","component","item_count","Math","floor","housingIndex","img","url","StarRounded","rating","average","count","withRouter","galleryModalStyles","closeModalBtn","right","GalleryModal","setRefAndState","name","el","currentIndex","mainCarousel","previewCarousel","prevInitialSlide","startAt","currentInitialSlide","Dialog","fullScreen","open","DialogContent","onClose","CloseRounded","asNavFor","prevArrow","nextArrow","initialSlide","focusOnSelect","useCustomArrowStyles","transform","CustomArrowPrev","CustomArrowNext","statAt","PageHousingSingle","fetchHousingReviews","housingId","match","params","reviews","reviewsPagination","onCloseModal","galleryModalIsOpen","handleDateChange","nextDate","formData","reviewsAnchor","reviewsSectionRef","offsetTop","renderCalendarDay","day","selectedDate","dayInCurrentMonth","dayComponent","galleryModalStartAt","openBookingDialog","checkin","chekout","booking","focusedDateInput","createRef","console","BookingCtaContainer","isMobile","DatePicker","disableToolbar","format","margin","label","value","onChange","fullWidth","inputVariant","renderDay","checkout","marginBottom","Button","size","bookingCta__btn","mobileBookingCta__btn","windowWidth","tablet","viewPhotosBtn__root","slice","galleryItemBtn","animation","location_country","host","avatar","BodySection","body","description","sectionRef","score_total","Object","entries","score_details","scoreIndex","s","scoreName","score","charAt","toUpperCase","comment","author","display_name","moment","Date","posted_at","CircularProgress","section__title","dayWrapper","typography","caption","customDayHighlight","bottom","border","nonCurrentMonthDay","text","disabled","highlightNonCurrentMonthDay","highlight","background","primary","firstHighlight","extend","borderTopLeftRadius","borderBottomLeftRadius","endHighlight","borderTopRightRadius","borderBottomRightRadius","marginTop","innerWidth","setWindowWidth","onWindomResize","event","useEffect","addEventListener","removeEventListener","createMuiTheme","App","ThemeProvider","exact","Boolean","hostname","dotenv","config","ReactDOM","render","utils","MomentUtils","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ae99c7e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { \r\n    AppBar, \r\n    Toolbar, \r\n    Typography, \r\n    IconButton,\r\n    InputBase,\r\n} from '@material-ui/core'\r\nimport { SearchOutlined, Menu} from '@material-ui/icons'\r\nimport { makeStyles, fade } from '@material-ui/core/styles'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n    //   flexGrow: 1,\r\n      flexShrink: 0,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'inline-block',\r\n        marginRight: theme.spacing(2),\r\n        },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        // width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n    //   transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n    //   [theme.breakpoints.up('sm')]: {\r\n    //     width: 120,\r\n    //     '&:focus': {\r\n    //       width: \"100%\",\r\n    //     },\r\n    //   },\r\n    },\r\n  }))\r\n\r\nconst Header = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar color=\"primary\" position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Link to=\"/\">\r\n                      <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                          my-airbnb\r\n                      </Typography>\r\n                    </Link>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchOutlined />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search for stays\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","// Modules\r\nimport React from 'react'\r\n\r\n// Components\r\n\r\n\r\n// Assets\r\nimport './page.home.scss'\r\n\r\nconst PageHome = () => {\r\n    return (\r\n        <div className=\"page page-home\">\r\n            <h1>Welcome to my-airbnb</h1>\r\n            <ul>\r\n                <li><a href=\"/housings\">housings list</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageHome","export default {\r\n\r\n    setClassnames: (defaultClassnames, conditionalClassnames) => {\r\n        let className = defaultClassnames\r\n\r\n        for(let key in conditionalClassnames){\r\n            className += conditionalClassnames[key] === true ? (\" \" + key) : \"\"\r\n        }\r\n    \r\n        return className\r\n    },\r\n\r\n\r\n    renderHousingTags: housing => {\r\n        return [\r\n            housing.info_guest + \" guests\",\r\n            housing.info_bed + \" beds\",\r\n            housing.info_kitchen && housing.info_kitchen + \" kitchens\",\r\n            housing.info_wifi && \"Wifi\",\r\n        ].filter(tag => tag)\r\n        .join(\" · \")\r\n    },\r\n\r\n    renderUserDisplayName: user => user.first_name + \" \" + user.last_name\r\n    \r\n}","// Modules\r\nimport React from 'react'\r\nimport Slider from 'react-slick';\r\nimport PropTypes from 'prop-types'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\n// Assets\r\nimport './carousel.scss'\r\n\r\n// Utils\r\nimport GlobalUtils from '../../utils/GlobalUtils'\r\n\r\nclass Carousel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            carouselCurrent: 0\r\n        }\r\n    }\r\n\r\n    _afterChange = current => {\r\n\r\n        this.setState({carouselCurrent: current})\r\n\r\n        if(this.props.SlickProps.afterChange){\r\n            this.props.SlickProps.afterChange(current)\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        if(!this.props.images || !this.props.images.length){\r\n            return (\r\n                <div className=\"Carousel\">\r\n                    <div className=\"Carousel-item\">\r\n                        <Skeleton variant=\"rect\" style={{paddingTop: \"62.5%\"}}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n\r\n            this.props.images.length > 1 ? (\r\n                <Slider\r\n                    dots={true}\r\n                    arrows={false}\r\n                    infinite={false}\r\n                    slidesToShow={1}         \r\n                    slidesToScroll={1}\r\n                    className=\"Carousel\"\r\n                    ref={this.props.carouselRef}\r\n                    afterChange={this._afterChange}\r\n                    {...{\r\n                        lazyLoad: true,\r\n                        ...this.props.SlickProps,\r\n                    }}\r\n\r\n                >{\r\n                    this.props.images.map((image, imageIndex) => (\r\n                        <div \r\n                            key={\"image-\" + imageIndex} \r\n                            className={GlobalUtils.setClassnames(\"Carousel-item\", {\r\n                                \"Carousel-item-current\": imageIndex === this.state.carouselCurrent\r\n                            })}\r\n                        >\r\n                            <div className=\"Carousel-item-inner\">\r\n                                <img src={image} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }</Slider>\r\n                \r\n            ) : (\r\n                <div className=\"Carousel\">\r\n                    <div className=\"Carousel-item\">\r\n                        <img src={this.props.images[0]} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n    \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nCarousel.defaultProps = {\r\n    SlickProps: {},\r\n    images: []\r\n}\r\n\r\nCarousel.propTypes = {\r\n    images: PropTypes.array,\r\n    carouselRef: PropTypes.any,\r\n    lazyLoad: PropTypes.bool,\r\n    SlickProps: PropTypes.object\r\n}\r\n\r\nexport default Carousel\r\n","import React, {useState} from 'react'\r\nimport {IconButton, createStyles, withStyles} from '@material-ui/core'\r\nimport {Favorite, FavoriteBorder} from '@material-ui/icons'\r\nimport { withTheme } from '@material-ui/styles'\r\n\r\nconst styles = createStyles(theme => ({\r\n\r\n    root: {\r\n        backgroundColor: \"#fff\",\r\n        position: \"absolute\",\r\n        top: 7,\r\n        left: 7,\r\n        zIndex: 1,\r\n        padding: 8,\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.grey[100]\r\n        }\r\n    }\r\n\r\n}))\r\n\r\nconst ButtonAddFavorite = ({favorite = false, classes, theme}) => {\r\n\r\n    const [isFavorite, setFavorite] = useState(false)\r\n\r\n    return (\r\n        <IconButton onClick={() => setFavorite(!isFavorite)} classes={{root: classes.root}}>\r\n            {isFavorite ? (\r\n                <Favorite style={{color: theme.palette.secondary.main, fontSize: 20}}/>\r\n            ) : (\r\n                <FavoriteBorder style={{fontSize: 20}}/>\r\n            )}\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport default withTheme(withStyles(styles)(ButtonAddFavorite))","export default {\r\n\r\n    BREAKPOINTS: {\r\n        \"tablet\": 768,\r\n        \"desktop\": 992,\r\n    },\r\n\r\n    API_DOMAIN: \"http://172.31.24.215:3002\"\r\n\r\n}","// Modules\r\nimport React from 'react'\r\nimport {\r\n    NavigateBefore,\r\n    NavigateNext\r\n} from '@material-ui/icons'\r\nimport { IconButton } from '@material-ui/core'\r\nimport { withStyles, createStyles } from '@material-ui/styles';\r\nimport PropTypes from 'prop-types'\r\n\r\n// Assets\r\nimport './pagination.scss'\r\nimport GlobalUtils from '../../utils/GlobalUtils';\r\n\r\n\r\nconst styles = createStyles(theme => ({\r\n\r\n\r\n}))\r\n\r\n// @OPTIMIZATION - should display page [1;infini] instead of [0;infini]\r\nclass Pagination extends React.Component{\r\n    render(){\r\n\r\n        // const classes = this.props.classes\r\n\r\n        return(\r\n            <div className=\"Pagination\">\r\n                {this.props.page_current !== 0 && <div className=\"Pagination-arrow Pagination-arrow-prev\">\r\n                    <IconButton onClick={() => this.props.onClick(this.props.page_current - 1)}>\r\n                        <NavigateBefore/>\r\n                    </IconButton>\r\n                </div>}\r\n\r\n                <div className=\"Pagination-list\">\r\n                    {\r\n                        // @OPTIMIZATION - completly deprecated\r\n                        Array(this.props.page_count).fill(true).map((page, pageIndex) => {\r\n\r\n                            const isPrev = pageIndex === this.props.page_current - 1\r\n                            const isNext = pageIndex === this.props.page_current + 1\r\n\r\n                            const isFirst = pageIndex === 0\r\n                            const isLast = pageIndex === this.props.page_count - 1\r\n                            \r\n                            const isCurrent = pageIndex === this.props.page_current\r\n\r\n                            \r\n                            if(\r\n                                (isCurrent)\r\n                                || (isFirst || isLast) \r\n                                || (isPrev || isNext)\r\n                            ){ \r\n\r\n                                return (\r\n                                    <React.Fragment\r\n                                        key={\"pagination-btn-\" + pageIndex}\r\n                                    >\r\n                                        {\r\n                                            (isPrev && !isFirst) && <div className=\"dots\">…</div>\r\n                                        }\r\n                                        <button\r\n                                            onClick={() => this.props.onClick(pageIndex)}\r\n                                            className={GlobalUtils.setClassnames(\"Pagination-list-btn\", {\r\n                                                \"current\": pageIndex === this.props.page_current\r\n                                            })}\r\n                                        >\r\n                                            <span>{pageIndex + 1}</span>\r\n                                        </button>\r\n                                        {\r\n                                            (isNext && !isLast) && <div className=\"dots\">…</div>\r\n                                        }\r\n                                    </React.Fragment>\r\n                                )\r\n                            } else {\r\n                                return \"\"\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                {this.props.page_current !== this.props.page_count - 1 && <div className=\"Pagination-arrow Pagination-arrow-next\">\r\n                    <IconButton onClick={() => this.props.onClick(this.props.page_current + 1)}>\r\n                        <NavigateNext/>\r\n                    </IconButton>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPagination.propTypes = {\r\n    item_count: PropTypes.number.isRequired,\r\n    page_current: PropTypes.number.isRequired,\r\n    page_count: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(Pagination)","// Modules\r\nimport React from 'react'\r\nimport {\r\n    StarRounded,\r\n} from '@material-ui/icons'\r\nimport {Typography} from '@material-ui/core'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport {\r\n    Link,\r\n    withRouter\r\n} from 'react-router-dom'\r\n\r\n// Components\r\n\r\n\r\n// Assets\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './page.housingList.scss'\r\nimport Carousel from '../../shared/carousel/carousel.index';\r\nimport ButtonAddFavorite from '../../shared/ButtonAddFavorite';\r\nimport { withTheme } from '@material-ui/styles';\r\nimport AppConstants from '../../utils/AppConstants';\r\nimport GlobalUtils from '../../utils/GlobalUtils';\r\nimport Pagination from '../../shared/pagination/pagination.index'\r\n\r\n\r\nconst placeholderList = [{id: 0},{id: 1},{id: 2}]\r\n\r\nconst renderTotalListCount = n => {\r\n    if(n < 10) return n\r\n    else if(n < 100) return Math.floor(n / 10) * 10\r\n    else if(n < 1000) return Math.floor(n / 100) * 100\r\n    else if(n < 10000) return Math.floor(n / 1000) * 1000\r\n    else return n\r\n}\r\n\r\nclass PageHousingList  extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            housings: null,\r\n            pagination: null\r\n        }\r\n    }\r\n\r\n    // @OPTIMIZATION - should display page [1;infini] instead of [0;infini]\r\n    fetchHousingsList = (page = 0) => {\r\n        return fetch(AppConstants.API_DOMAIN + \"/housing?offset=\" + page)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n\r\n            if(res.error){\r\n                return;\r\n            }\r\n            \r\n            this.setState({\r\n                housings: res.data.list,\r\n                pagination: res.data.pagination,\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n\r\n        if(prevProps.location.search !== this.props.location.search){ // changing pagination\r\n            const nextPage = this.getCurrentPagination()\r\n\r\n            if(nextPage){ // retrieve next pagination\r\n                this.fetchHousingsList(nextPage).then(() => {\r\n                    window.scrollTo(0, 0)\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        const nextPagination = this.getCurrentPagination()\r\n        this.fetchHousingsList(nextPagination || 0)\r\n    }\r\n\r\n    // @OPTIMIZATION - should display page [1;infini] instead of [0;infini]\r\n    getCurrentPagination = () => new URLSearchParams(this.props.location.search).get(\"page\")\r\n\r\n    handlePagination = page => {\r\n    // @OPTIMIZATION - should display page [1;infini] instead of [0;infini]\r\n        this.props.history.push({\r\n            path: this.props.location.pathname,\r\n            search: \"?page=\" + page \r\n        })\r\n    }\r\n    \r\n    render(){\r\n\r\n        const housings = this.state.housings\r\n\r\n        return (\r\n            <div className=\"page page-housingList\">\r\n                {this.state.pagination && <div className=\"page-housingList-top\">\r\n                    <Typography variant=\"h5\" component=\"p\">+ {renderTotalListCount(this.state.pagination.item_count)} more stays</Typography>\r\n                </div>}\r\n                <div className=\"page-housingList-list\">\r\n                    {\r\n                        (housings ? housings : placeholderList).map((housing, housingIndex) => {\r\n\r\n                            return (\r\n                                <div key={\"housing-\" + housing.id} className=\"page-housingList-list-item\">\r\n                                    {housings && <Link to={this.props.location.pathname + \"/\" + housing.id} className=\"block-link\"></Link>}\r\n                                    <div className=\"page-housingList-list-item-images\">\r\n                                        {housings && <ButtonAddFavorite/>}\r\n                                        <Carousel images={housings && housing.images.map(img => img.url)}/>\r\n                                    </div>\r\n    \r\n                                    <div className=\"page-housingList-list-item-body\">\r\n                                        <div className=\"page-housingList-list-item-body-header\">\r\n                                            {housings ? <Typography component=\"span\" variant=\"overline\">Entire apartment</Typography> : \"\"}\r\n                                            {housings ? (\r\n                                                <div className=\"page-housingList-list-item-body-header-rating\">\r\n                                                    <StarRounded style={{color: this.props.theme.palette.secondary.main, fontSize: \"14px\"}}/>\r\n                                                    <Typography variant=\"subtitle2\" component=\"span\">{housing.rating.average} ({housing.rating.count})</Typography>\r\n                                                </div>\r\n                                            ) : \"\"}\r\n                                        </div>\r\n                                        <div className=\"page-housingList-list-item-body-title\">\r\n                                            {housings ? <Typography variant=\"h5\">{housing.title}</Typography> : (\r\n                                                <React.Fragment>\r\n                                                    <Skeleton variant=\"text\"/>\r\n                                                    <Skeleton variant=\"text\"/>\r\n                                                </React.Fragment>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"page-housingList-list-item-body-info\">\r\n                                            {housings ? <Typography variant=\"body1\">{GlobalUtils.renderHousingTags(housing)}</Typography> : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                {this.state.pagination && <Pagination onClick={this.handlePagination} {...this.state.pagination}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTheme(withRouter(PageHousingList))","// Modules\r\nimport React from 'react'\r\nimport {\r\n    Dialog, Typography, IconButton, DialogContent\r\n} from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\nimport Carousel from '../carousel/carousel.index'\r\nimport {\r\n    NavigateBefore,\r\n    NavigateNext,\r\n    CloseRounded\r\n} from '@material-ui/icons'\r\nimport { withStyles, createStyles, makeStyles } from '@material-ui/styles'\r\n\r\n// Components\r\n\r\n// Assets\r\nimport './galleryModal.scss'\r\n\r\n\r\nconst galleryModalStyles = createStyles(theme => ({\r\n\r\n    closeModalBtn: {\r\n        position: \"absolute\",\r\n        right: 0,\r\n        top: 0,\r\n        borderRadius: 0\r\n    }\r\n\r\n}))\r\n\r\nclass GalleryModal extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            mainCarousel: null,\r\n            previewCarousel: null,\r\n\r\n            currentIndex: 0,\r\n        }\r\n\r\n        this.mainCarousel = null\r\n        this.previewCarousel = null\r\n    }\r\n\r\n    setRefAndState = name => (el) => {\r\n        if(!this[name]){\r\n            this[name] = el\r\n            this.setState({[name]: el})\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            mainCarousel: this.mainCarousel,\r\n            previewCarousel: this.previewCarousel,\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n        const prevInitialSlide = prevProps.startAt\r\n        const currentInitialSlide = this.props.startAt\r\n\r\n        if(prevInitialSlide !== currentInitialSlide){\r\n            this.setState({currentIndex: currentInitialSlide})\r\n        }\r\n    }\r\n\r\n    _afterChange = current => {\r\n        this.setState({currentIndex: current})\r\n    }\r\n\r\n    _closeModal(){\r\n\r\n    }\r\n\r\n    render(){\r\n        const classes = this.props.classes\r\n        return(\r\n            <Dialog\r\n                fullScreen \r\n                open={this.props.open}\r\n                className=\"ModalGallery\"\r\n            >\r\n                <DialogContent>\r\n                    <IconButton onClick={this.props.onClose} classes={{root: classes.closeModalBtn}}>\r\n                        <CloseRounded/>\r\n                    </IconButton>\r\n                    <div className=\"ModalGallery-gallery\">\r\n\r\n                        <div className=\"ModalGallery-gallery-main\">\r\n                            <Carousel\r\n                                images={this.props.images.map(img => img.url)}\r\n                                carouselRef={this.setRefAndState(\"mainCarousel\")}\r\n                                SlickProps={{\r\n                                    asNavFor: this.state.previewCarousel,\r\n                                    dots: false,\r\n                                    afterChange: this._afterChange,\r\n                                    arrows: true,\r\n                                    prevArrow: <CustomArrowPrev/>,\r\n                                    nextArrow: <CustomArrowNext/>,\r\n                                    initialSlide: this.props.startAt,\r\n                                    lazyLoad: false,\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"ModalGallery-gallery-preview\">\r\n                            <Carousel\r\n                                images={this.props.images.map(img => img.url)}\r\n                                carouselRef={this.setRefAndState(\"previewCarousel\")}\r\n                                SlickProps={{\r\n                                    asNavFor: this.state.mainCarousel,\r\n                                    slidesToShow: 5,\r\n                                    dots: false,\r\n                                    focusOnSelect: true,\r\n                                    initialSlide: this.props.startAt,\r\n                                    lazyLoad: false,\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <Typography className=\"ModalGallery-gallery-count\" variant=\"h6\" component=\"p\">\r\n                            {`${this.state.currentIndex + 1} / ${this.props.images.length}`}\r\n                        </Typography>\r\n                        \r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nconst useCustomArrowStyles = makeStyles(theme => {\r\n    return {\r\n        root: {\r\n            position: \"absolute\",\r\n            zIndex: 1,\r\n            top: \"50%\",\r\n            transform: \"translate(0, -50%)\"\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomArrowPrev = props => {\r\n    const styles = useCustomArrowStyles()\r\n    return (\r\n        <IconButton color=\"primary\" classes={styles} onClick={props.onClick} style={{left: -60}}>\r\n            <NavigateBefore/>\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nconst CustomArrowNext = props => {\r\n    const styles = useCustomArrowStyles()\r\n    return (\r\n        <IconButton color=\"primary\" classes={styles} onClick={props.onClick} style={{right: -60}}>\r\n            <NavigateNext/>\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nGalleryModal.defaultProps = {\r\n    statAt: 0\r\n}\r\n\r\nGalleryModal.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    images: PropTypes.array.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    startAt: PropTypes.number\r\n}\r\n\r\nexport default withStyles(galleryModalStyles)(GalleryModal)\r\n\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react'\r\n\r\nexport default function widthWindowWidth(Component){\r\n    return props => {\r\n\r\n        const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n        const onWindomResize = event => {\r\n            setWindowWidth(window.innerWidth)\r\n        }\r\n        \r\n        const initComponent = () => {\r\n            window.addEventListener(\"resize\", onWindomResize)\r\n            return () => window.removeEventListener(\"resize\", onWindomResize)\r\n        }\r\n    \r\n        useEffect(initComponent, [])\r\n\r\n        return <Component {...props} windowWidth={windowWidth}/>\r\n    }\r\n\r\n}","// Modules\r\nimport React from 'react'\r\nimport { StarRounded } from '@material-ui/icons'\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport { Button, Dialog, DialogContent, IconButton, Typography, CircularProgress } from '@material-ui/core';\r\nimport {CloseRounded} from '@material-ui/icons'\r\nimport { withStyles, createStyles, withTheme } from '@material-ui/styles';\r\nimport { DatePicker, Day } from '@material-ui/pickers';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport moment from 'moment';\r\n\r\n\r\n// Components\r\nimport widthWindowWidth from '../../shared/widthWindowWidth';\r\nimport GalleryModal from '../../shared/galleryModal/galleryModal.index';\r\nimport Carousel from '../../shared/carousel/carousel.index';\r\nimport Pagination from '../../shared/pagination/pagination.index'\r\n\r\n\r\n// Assets\r\nimport './page.housingSingle.scss'\r\n\r\n// Utils\r\nimport GlobalUtils from '../../utils/GlobalUtils';\r\nimport AppConstants from '../../utils/AppConstants';\r\n\r\n\r\nconst capitalize = (s) => {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n\r\nconst styles = theme => createStyles({\r\n\r\n    dayWrapper: {\r\n        position: \"relative\",\r\n      },\r\n      day: {\r\n        width: 36,\r\n        height: 36,\r\n        fontSize: theme.typography.caption.fontSize,\r\n        margin: \"0 2px\",\r\n        color: \"inherit\",\r\n      },\r\n      customDayHighlight: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        bottom: 0,\r\n        left: \"2px\",\r\n        right: \"2px\",\r\n        border: `1px solid ${theme.palette.secondary.main}`,\r\n        borderRadius: \"50%\",\r\n      },\r\n      nonCurrentMonthDay: {\r\n        color: theme.palette.text.disabled,\r\n      },\r\n      highlightNonCurrentMonthDay: {\r\n        color: \"#676767\",\r\n      },\r\n      highlight: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n      },\r\n      firstHighlight: {\r\n        extend: \"highlight\",\r\n        borderTopLeftRadius: \"50%\",\r\n        borderBottomLeftRadius: \"50%\",\r\n      },\r\n      endHighlight: {\r\n        extend: \"highlight\",\r\n        borderTopRightRadius: \"50%\",\r\n        borderBottomRightRadius: \"50%\",\r\n      },\r\n\r\n\r\n    viewPhotosBtn__root: {\r\n        position: \"absolute\",\r\n        right: 15,\r\n        bottom: 15,\r\n        zIndex: 1\r\n    },\r\n\r\n    galleryItemBtn: {\r\n        borderRadius: 0\r\n    },\r\n\r\n\r\n    mobileBookingCta__btn: {\r\n        marginLeft: \"auto\",\r\n    },\r\n\r\n    bookingCta__btn: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n\r\n    closeModalBtn: {\r\n        position: \"absolute\",\r\n        right: 0,\r\n        top: 0,\r\n        borderRadius: 0\r\n    },\r\n\r\n})\r\n\r\nclass PageHousingSingle extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            galleryModalIsOpen: false,\r\n            galleryModalStartAt: 0,\r\n\r\n            openBookingDialog: false,\r\n\r\n            formData: {\r\n                checkin: null,\r\n                chekout: null,\r\n                booking: null\r\n            },\r\n\r\n            focusedDateInput: null,\r\n\r\n            housing: null,\r\n\r\n            reviews: null,\r\n            reviewsPagination: null\r\n        }\r\n\r\n        this.reviewsSectionRef = React.createRef()\r\n    }\r\n\r\n    fetchHousingReviews = (page = 0) => {\r\n\r\n        const housingId = this.props.match.params.id\r\n\r\n        return fetch(AppConstants.API_DOMAIN + \"/housing/\" + housingId + \"/reviews?offset=\" + page)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n\r\n            if(res.error){\r\n                return\r\n            }\r\n\r\n            this.setState({\r\n                reviews: res.data.list,\r\n                reviewsPagination: res.data.pagination\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const housingId = this.props.match.params.id\r\n\r\n        if(housingId){\r\n\r\n            // Fetch housing data\r\n            fetch(AppConstants.API_DOMAIN + \"/housing/\" + housingId)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n\r\n                if(res.error){\r\n                    return\r\n                }\r\n\r\n                this.setState({\r\n                    housing: res.data\r\n                })\r\n            })\r\n\r\n            // Fetch reviews\r\n            this.fetchHousingReviews(0)\r\n        } else {\r\n            console.error(\"No id matched\")\r\n            // go to 404\r\n        }\r\n        \r\n    }\r\n\r\n    onCloseModal = () => {\r\n        this.setState({galleryModalIsOpen: false})\r\n    }\r\n\r\n    handleDateChange = name => nextDate => {\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [name]: nextDate\r\n            }\r\n        })\r\n    }\r\n\r\n    handlePagination = page => {\r\n        this.fetchHousingReviews(page).then(() => {\r\n            const reviewsAnchor = this.reviewsSectionRef\r\n            window.scrollTo(0, reviewsAnchor.current.offsetTop)\r\n        })\r\n    }\r\n\r\n    renderCalendarDay = (day, selectedDate, dayInCurrentMonth, dayComponent) => {\r\n\r\n\r\n        return dayComponent;\r\n\r\n        // const today = moment()\r\n        // const isUnderMinDate = today.diff(day) > 0\r\n\r\n        // const isSelected = this.state.formData.checkin && (day.format(\"DD-MM-YYYY\") === this.state.formData.checkin.format(\"DD-MM-YYY\"))|| (this.state.formData.checkout && day.format(\"DD-MM-YYYY\") === this.state.formData.checkout.format(\"DD-MM-YYY\"))\r\n        // const isDisabled = isUnderMinDate\r\n\r\n        \r\n\r\n        // return <Day foo={{isSelected, isDisabled}} selected={!isDisabled && isSelected} disabled={isDisabled}>{day.format(\"DD\")}</Day>\r\n\r\n        // return (\r\n        //     <div className={this.props.classes.wrapperClassName}>\r\n        //         <IconButton className={this.props.classes.dayClassName}>\r\n        //             <span> {day.format(\"DD\")} </span>\r\n        //         </IconButton>\r\n        //     </div>\r\n        // )\r\n    }\r\n\r\n    render(){\r\n\r\n        const {classes} = this.props\r\n\r\n        const housing = this.state.housing\r\n        const reviews = this.state.reviews\r\n\r\n        const BookingCtaContainer = ({isMobile = false}) => (\r\n            <div className={`page-housingSingle-bookingCta ${isMobile ? \"page-housingSingle-bookingCta__mobile\" : \"\"}`}>\r\n                    <div className=\"page-housingSingle-bookingCta-heading\">\r\n                        {housing && <Typography variant=\"h6\">Add dates for prices</Typography>}\r\n                        {!housing && <Skeleton variant=\"text\"/>}\r\n                    </div>\r\n                    <div className=\"hr\"/>\r\n                    <div className=\"page-housingSingle-bookingCta-datepickers\">\r\n                        {housing ? (\r\n                            <React.Fragment>\r\n                                \r\n                                <DatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/DD/YYYY\"\r\n                                    margin=\"normal\"\r\n                                    label=\"Checkin\"\r\n                                    value={this.state.formData.checkin}\r\n                                    onChange={this.handleDateChange(\"checkin\")}\r\n                                    fullWidth\r\n                                    inputVariant=\"outlined\"     \r\n\r\n                                    renderDay={this.renderCalendarDay}\r\n                                />\r\n                                <DatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/DD/YYYY\"\r\n                                    margin=\"normal\"\r\n                                    label=\"Checkout\"\r\n                                    value={this.state.formData.checkout}\r\n                                    onChange={this.handleDateChange(\"checkout\")}\r\n                                    fullWidth   \r\n                                    inputVariant=\"outlined\"\r\n                                />\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Skeleton variant=\"rect\" style={{marginBottom: 15}}/>\r\n                                <Skeleton variant=\"rect\" style={{marginBottom: 15}}/>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                    {housing ? (<Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        fullWidth\r\n                        classes={{root: classes.bookingCta__btn}}\r\n                    >Book</Button>) : (\r\n                        <Skeleton variant=\"rect\" height={40}/>\r\n                    )}\r\n                </div>\r\n        )\r\n\r\n\r\n        return (\r\n            <div className=\"page page-housingSingle\">\r\n                <div className=\"page-housingSingle-mobileBookingCta\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        classes={{root: classes.mobileBookingCta__btn}}\r\n                        onClick={() => this.setState({openBookingDialog: true})}\r\n                    >Add dates</Button>\r\n                    <Dialog\r\n                        open={this.state.openBookingDialog}\r\n                        fullScreen\r\n                    >\r\n                        <DialogContent>\r\n                            <IconButton onClick={() => this.setState({openBookingDialog: false})} classes={{root: classes.closeModalBtn}}>\r\n                                <CloseRounded/>\r\n                            </IconButton>\r\n                            <BookingCtaContainer isMobile={true}/>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </div>\r\n                {\r\n                    // show carousel on mobile && grid on tablet and more\r\n                    (this.props.windowWidth > AppConstants.BREAKPOINTS.tablet && (housing && housing.images.length !== 2)) ? (\r\n                        <div className={GlobalUtils.setClassnames(\"page-housingSingle-gallery\", {\r\n                            \"page-housingSingle-gallery-1\": housing.images.length === 1,\r\n                            \"page-housingSingle-gallery-2\": housing.images.length === 2,\r\n                            \"page-housingSingle-gallery-3\": housing.images.length === 3,\r\n                            \"page-housingSingle-gallery-4\": housing.images.length === 4,\r\n                            \"page-housingSingle-gallery-5andmore\": housing.images.length >= 5,\r\n                        })}>\r\n                            {\r\n                                housing.images.length > 1 && (\r\n                                    <>\r\n                                        <Button \r\n                                            onClick={() => this.setState({galleryModalIsOpen: true})} \r\n                                            color=\"primary\" \r\n                                            variant=\"contained\" \r\n                                            classes={{root: classes.viewPhotosBtn__root}}\r\n                                        >View photos</Button>\r\n\r\n                                        <GalleryModal\r\n                                            images={housing.images}\r\n                                            onClose={this.onCloseModal}\r\n                                            open={this.state.galleryModalIsOpen}\r\n                                            startAt={this.state.galleryModalStartAt}\r\n                                        />\r\n                                    </>\r\n                                )\r\n                            }\r\n                            <div className=\"page-housingSingle-gallery-grid\">\r\n                            {\r\n                               housing.images.slice(0, 5).map((image, imageIndex) => {\r\n                                    return (\r\n                                        <Button\r\n                                            classes={{root: classes.galleryItemBtn}}\r\n                                            key={\"images-\" + imageIndex} \r\n                                            className={\"page-housingSingle-gallery-grid-item cell-\" + (1 + imageIndex)}\r\n                                            onClick={() => this.setState({galleryModalIsOpen: true, galleryModalStartAt: imageIndex})}\r\n                                        >\r\n                                            <div>\r\n                                                <img src={image.url} alt=\"\"/>\r\n                                            </div>\r\n                                        </Button>\r\n                                        \r\n                                    )\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        housing ? (<Carousel images={housing.images.map(img => img.url)}/>) : (<Skeleton variant=\"rect\" animation=\"wave\" style={{paddingTop: (100 / (560/260)) + \"%\"}}/>)\r\n                    )\r\n                }\r\n\r\n                <div className=\"page-housingSingle-bodyContainer\">\r\n                    <div className=\"page-housingSingle-body\">\r\n                        <div className=\"page-housingSingle-body-row\">\r\n                            <div className=\"page-housingSingle-body-title\">\r\n                                \r\n                                {!housing && (\r\n                                    <React.Fragment>\r\n                                        <Skeleton variant=\"text\" width={\"100%\"}/>\r\n                                        <Skeleton variant=\"text\" width={\"100%\"}/>\r\n                                        <Skeleton variant=\"text\" width={\"50%\"}/>\r\n                                    </React.Fragment>\r\n                                )}\r\n                                {housing && <Typography variant=\"h3\">{housing.title}</Typography>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"page-housingSingle-body-row\">\r\n                            <span className=\"page-housingSingle-body-location\">\r\n                                {housing ? housing.location_country : (\r\n                                    <Skeleton variant=\"text\"/>\r\n                                )}\r\n                            </span>\r\n                            <div className=\"page-housingSingle-body-host\">\r\n                                <div className=\"page-housingSingle-body-host-avatar\">\r\n                                    {housing ?( <img src={housing.host.avatar} alt=\"\"/>) : (\r\n                                        <Skeleton variant=\"circle\" width={35} height={35}/>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"page-housingSingle-body-host-name\">\r\n                                    {housing ? (\r\n                                        <Typography variant=\"subtitle2\" component=\"span\">\r\n                                            {GlobalUtils.renderUserDisplayName(housing.host)}\r\n                                        </Typography>) : \r\n                                        (\r\n                                            <Skeleton variant=\"text\" width={45}/>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>  \r\n                        </div>\r\n                        <BodySection\r\n                            title=\"Information about the housing\"\r\n                            name=\"information\"\r\n                            body={\r\n                                housing ? (\r\n                                    <Typography variant=\"subtitle2\" className=\"page-housingSingle-body-info-data\">\r\n                                        {GlobalUtils.renderHousingTags(housing)}\r\n                                    </Typography>\r\n                                ) : (\r\n                                    <Skeleton variant=\"text\"/>\r\n                                )\r\n                            }\r\n                        />\r\n                        <div className=\"hr\"/>\r\n                        <BodySection\r\n                            title=\"Description\"\r\n                            name=\"description\"\r\n                            body={\r\n                                <div className=\"page-housingSingle-body-section-body\">\r\n                                    {housing ? (<Typography variant=\"body2\" component=\"p\">{housing.description}</Typography>) : (\r\n                                        <React.Fragment>\r\n                                            <Skeleton variant=\"text\"/>\r\n                                            <Skeleton variant=\"text\"/>\r\n                                            <Skeleton variant=\"text\"/>\r\n                                            <Skeleton variant=\"text\"/>\r\n                                            <Skeleton variant=\"text\" width={\"80%\"}/>\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                </div>\r\n                            }\r\n                        />\r\n                        <div className=\"hr small\"></div>\r\n                        <BodySection\r\n                            title=\"Reviews\"\r\n                            name=\"reviews\"\r\n                            sectionRef={this.reviewsSectionRef}\r\n                            body={\r\n                                housing ? (<React.Fragment>\r\n                                    <div className=\"page-housingSingle-body-section__reviews-top\">\r\n                                        <StarRounded color=\"secondary\" className=\"page-housingSingle-body-section__reviews-top__icon\"/>\r\n                                        {housing && <Typography className=\"page-housingSingle-body-section__reviews-top__score\" component=\"span\" variant=\"h6\">{housing.reviews.score_total}</Typography>}\r\n                                        <div className=\"separator vertical\"/>\r\n                                        <span className=\"page-housingSingle-body-section__reviews-top__count\">\r\n                                            {housing && <Typography component=\"span\" className=\"page-housingSingle-body-section__reviews-top__count-value\">{housing.reviews.count}</Typography>}\r\n                                            <span> reviews</span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"page-housingSingle-body-section__reviews-details\">\r\n                                        {\r\n                                            housing && Object.entries(housing.reviews.score_details).map(([scoreName, score], scoreIndex) => (\r\n                                                <div key={\"rating-score-\" + scoreIndex} className=\"page-housingSingle-body-section__reviews-details-item\">\r\n                                                    <div className=\"page-housingSingle-body-section__reviews-details-item-name\">\r\n                                                        <Typography variant=\"body1\">{capitalize(scoreName)}</Typography>\r\n                                                    </div>\r\n                                                    <div className=\"page-housingSingle-body-section__reviews-details-item-value\">\r\n                                                        <div className=\"progress\">\r\n                                                            <div style={{backgroundColor: this.props.theme.palette.secondary.main, width: (score * 100 / 5) + \"%\"}} className=\"progress-value\"></div>\r\n                                                        </div>\r\n                                                        <div className=\"page-housingSingle-body-section__reviews-details-item-value-value\">{score}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"page-housingSingle-body-section__reviews-comments\">\r\n                                        {\r\n                                            reviews ? reviews.map((comment) => {\r\n\r\n                                                return (\r\n                                                    <div key={\"comment-\" + comment.id} className=\"page-housingSingle-body-section__reviews-comments-item\">\r\n                                                        <div className=\"page-housingSingle-body-section__reviews-comments-item-top\">\r\n                                                            <div className=\"page-housingSingle-body-section__reviews-comments-item-top-guest\">\r\n                                                                <div className=\"page-housingSingle-body-section__reviews-comments-item-top-guest__avatar\">\r\n                                                                    <img src={comment.author.avatar} alt={GlobalUtils.renderUserDisplayName(comment.author)}/>\r\n                                                                </div>\r\n                                                                <div className=\"page-housingSingle-body-section__reviews-comments-item-top-guest__right\">\r\n                                                                    <div className=\"page-housingSingle-body-section__reviews-comments-item-top-guest__right__name\">\r\n                                                                        <Typography component=\"span\" variant=\"subtitle1\">{comment.author.display_name}</Typography>\r\n                                                                    </div>\r\n                                                                    <div className=\"page-housingSingle-body-section__reviews-comments-item-top-guest__right__date\">\r\n                                                                        <Typography variant=\"subtitle1\" component=\"span\">\r\n                                                                            {moment(new Date(comment.posted_at)).format(\"DD MMMM YYYY\")}\r\n                                                                        </Typography>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"page-housingSingle-body-section__reviews-comments-item-top-score\">\r\n                                                                <StarRounded color=\"secondary\" className=\"page-housingSingle-body-section__reviews-comments-item-top-score__icon\"/>\r\n                                                                <Typography className=\"page-housingSingle-body-section__reviews-comments-item-top-score__value\" component=\"span\" variant=\"h6\">{comment.score_total}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {comment.comment && <div className=\"page-housingSingle-body-section__reviews-comments-item-body\">\r\n                                                            <Typography variant=\"body1\">{comment.comment}</Typography>\r\n                                                        </div>}\r\n                                                    </div>\r\n                                                )\r\n                                            }) : (\r\n                                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                                    <CircularProgress color=\"primary\"/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    {this.state.reviewsPagination && <Pagination onClick={this.handlePagination} {...this.state.reviewsPagination}/>}\r\n                                </React.Fragment>) : (\r\n                                    <Skeleton variant=\"rect\" height={200}/>\r\n                                )\r\n                            }\r\n                        />\r\n                    </div>\r\n                    \r\n\r\n                    <div className=\"page-housingSingle-aside\">\r\n                        <BookingCtaContainer/>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst BodySection = withStyles(createStyles(theme => ({\r\n    section__title: {\r\n        marginBottom: 15\r\n    }\r\n})))(({title, name, body, classes, sectionRef = null}) => (\r\n    <div ref={sectionRef} id={name} className={\"page-housingSingle-body-section page-housingSingle-body-section__\" + name}>\r\n        <Typography variant=\"h5\" className={classes.section__title}>{title}</Typography>\r\n        <div className=\"page-housingSingle-body-section-body\">\r\n            {body}\r\n        </div>\r\n    </div>\r\n))\r\n\r\n\r\n\r\nexport default withRouter(widthWindowWidth(withStyles(styles)(withTheme(PageHousingSingle))))","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst theme =  createMuiTheme({\r\n\r\n    // type: \"dark\",\r\n    \r\n    palette: {\r\n        \r\n        // primary: {\r\n        //     main: \"#ff7e78\"\r\n        // },\r\n\r\n        // secondary: {\r\n        //     main: \"#0e305b\"\r\n        // },\r\n    }\r\n})\r\n\r\nexport default theme","// Modules\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\n\r\n// Components\r\nimport Header from './shared/header/header.index';\r\nimport PageHome from './pages/page.home/page.home.index';\r\nimport PageHousingList from './pages/page.housingList/page.housingList.index';\r\nimport PageHousingSingle from './pages/page.housingSingle/page.housingSingle.index';\r\nimport DateRangePicker from './shared/DateRangePicker';\r\n\r\n// Assets\r\nimport './styles/styles.scss'\r\n\r\n// Utils\r\nimport theme from './shared/MaterialTheme'\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <PageHome/>\r\n          </Route>\r\n\r\n          <Route path=\"/housings/:id\">\r\n            <PageHousingSingle/>\r\n          </Route>\r\n\r\n          <Route path=\"/housings\" exact>\r\n            <PageHousingList/>\r\n          </Route>\r\n\r\n        </Switch>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import dotenv from 'dotenv'\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Router manager\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\n// Date manager\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\n\r\ndotenv.config()\r\n\r\nReactDOM.render((\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </MuiPickersUtilsProvider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}